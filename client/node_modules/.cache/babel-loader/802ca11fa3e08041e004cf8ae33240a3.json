{"ast":null,"code":"var uuidv4 = require('uuid/v4');\n/*\n*\tcreateUser\n*\tCreates a user.\n*\t@prop id {string}\n*\t@prop name {string}\n*\t@param {object} \n*\t\tname {string}\n*/\n\n\nvar createUser = function createUser() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$name = _ref.name,\n      name = _ref$name === void 0 ? \"\" : _ref$name,\n      _ref$socketId = _ref.socketId,\n      socketId = _ref$socketId === void 0 ? null : _ref$socketId;\n\n  return {\n    id: uuidv4(),\n    name: name,\n    socketId: socketId\n  };\n};\n/*\n*\tcreateMessage\n*\tCreates a messages object.\n* \t@prop id {string}\n* \t@prop time {Date} the time in 24hr format i.e. 14:22\n* \t@prop message {string} actual string message\n* \t@prop sender {string} sender of the message\n*\t@param {object} \n*\t\tmessage {string}\n*\t\tsender {string}\n*/\n\n\nvar createMessage = function createMessage() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref2$message = _ref2.message,\n      message = _ref2$message === void 0 ? \"\" : _ref2$message,\n      _ref2$sender = _ref2.sender,\n      sender = _ref2$sender === void 0 ? \"\" : _ref2$sender;\n\n  return {\n    id: uuidv4(),\n    time: getTime(new Date(Date.now())),\n    message: message,\n    sender: sender\n  };\n};\n/*\n*\tcreateChat\n*\tCreates a Chat object\n* \t@prop id {string}\n* \t@prop name {string}\n* \t@prop messages {Array.Message}\n* \t@prop users {Array.string}\n*\t@param {object} \n*\t\tmessages {Array.Message}\n*\t\tname {string}\n*\t\tusers {Array.string}\n* \n*/\n\n\nvar createChat = function createChat() {\n  var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref3$messages = _ref3.messages,\n      messages = _ref3$messages === void 0 ? [] : _ref3$messages,\n      _ref3$name = _ref3.name,\n      name = _ref3$name === void 0 ? \"Community\" : _ref3$name,\n      _ref3$users = _ref3.users,\n      users = _ref3$users === void 0 ? [] : _ref3$users,\n      _ref3$isCommunity = _ref3.isCommunity,\n      isCommunity = _ref3$isCommunity === void 0 ? false : _ref3$isCommunity;\n\n  return {\n    id: uuidv4(),\n    name: isCommunity ? \"Community\" : createChatNameFromUsers(users),\n    messages: messages,\n    users: users,\n    typingUsers: [],\n    isCommunity: isCommunity\n  };\n};\n/*\n*\tcreateChatNameFromUsers\n*\t@param users {Array.string}\n*\t@param excludedUser {string} user to exclude from list of names\n*\t@return {string} users names concatenated by a '&' or \"Empty Chat\" if no users\n*/\n\n\nvar createChatNameFromUsers = function createChatNameFromUsers(users) {\n  var excludedUser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return users.filter(function (u) {\n    return u !== excludedUser;\n  }).join(' & ') || \"Empty Users\";\n};\n/*\n*\t@param date {Date}\n*\t@return a string represented in 24hr time i.e. '11:30', '19:30'\n*/\n\n\nvar getTime = function getTime(date) {\n  return \"\".concat(date.getHours(), \":\").concat((\"0\" + date.getMinutes()).slice(-2));\n};\n\nmodule.exports = {\n  createMessage: createMessage,\n  createChat: createChat,\n  createUser: createUser,\n  createChatNameFromUsers: createChatNameFromUsers\n};","map":{"version":3,"sources":["/Users/nbeny/Documents/chat-app/client/src/Factories.js"],"names":["uuidv4","require","createUser","name","socketId","id","createMessage","message","sender","time","getTime","Date","now","createChat","messages","users","isCommunity","createChatNameFromUsers","typingUsers","excludedUser","filter","u","join","date","getHours","getMinutes","slice","module","exports"],"mappings":"AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;AAEA;;;;;;;;;;AAQA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,iFAAgC,EAAhC;AAAA,uBAAEC,IAAF;AAAA,MAAEA,IAAF,0BAAS,EAAT;AAAA,2BAAaC,QAAb;AAAA,MAAaA,QAAb,8BAAwB,IAAxB;;AAAA,SAClB;AACCC,IAAAA,EAAE,EAACL,MAAM,EADV;AAECG,IAAAA,IAAI,EAAJA,IAFD;AAGCC,IAAAA,QAAQ,EAARA;AAHD,GADkB;AAAA,CAAnB;AAQA;;;;;;;;;;;;;AAWA,IAAME,aAAa,GAAG,SAAhBA,aAAgB;AAAA,kFAA+B,EAA/B;AAAA,4BAAEC,OAAF;AAAA,MAAEA,OAAF,8BAAY,EAAZ;AAAA,2BAAgBC,MAAhB;AAAA,MAAgBA,MAAhB,6BAAyB,EAAzB;;AAAA,SACpB;AACCH,IAAAA,EAAE,EAACL,MAAM,EADV;AAECS,IAAAA,IAAI,EAACC,OAAO,CAAC,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAD,CAFb;AAGCL,IAAAA,OAAO,EAAPA,OAHD;AAICC,IAAAA,MAAM,EAANA;AAJD,GADoB;AAAA,CAAtB;AAUA;;;;;;;;;;;;;;;AAaA,IAAMK,UAAU,GAAG,SAAbA,UAAa;AAAA,kFAAwE,EAAxE;AAAA,6BAAEC,QAAF;AAAA,MAAEA,QAAF,+BAAa,EAAb;AAAA,yBAAiBX,IAAjB;AAAA,MAAiBA,IAAjB,2BAAwB,WAAxB;AAAA,0BAAqCY,KAArC;AAAA,MAAqCA,KAArC,4BAA6C,EAA7C;AAAA,gCAAiDC,WAAjD;AAAA,MAAiDA,WAAjD,kCAA+D,KAA/D;;AAAA,SAClB;AACCX,IAAAA,EAAE,EAACL,MAAM,EADV;AAECG,IAAAA,IAAI,EAAEa,WAAW,GAAG,WAAH,GAAiBC,uBAAuB,CAACF,KAAD,CAF1D;AAGCD,IAAAA,QAAQ,EAARA,QAHD;AAICC,IAAAA,KAAK,EAALA,KAJD;AAKCG,IAAAA,WAAW,EAAC,EALb;AAMCF,IAAAA,WAAW,EAAXA;AAND,GADkB;AAAA,CAAnB;AAWA;;;;;;;;AAMA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACF,KAAD,EAA8B;AAAA,MAAtBI,YAAsB,uEAAP,EAAO;AAC7D,SAAOJ,KAAK,CAACK,MAAN,CAAa,UAAAC,CAAC;AAAA,WAAIA,CAAC,KAAKF,YAAV;AAAA,GAAd,EAAsCG,IAAtC,CAA2C,KAA3C,KAAqD,aAA5D;AACA,CAFD;AAIA;;;;;;AAIA,IAAMZ,OAAO,GAAG,SAAVA,OAAU,CAACa,IAAD,EAAQ;AACvB,mBAAUA,IAAI,CAACC,QAAL,EAAV,cAA6B,CAAC,MAAID,IAAI,CAACE,UAAL,EAAL,EAAwBC,KAAxB,CAA8B,CAAC,CAA/B,CAA7B;AACA,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiB;AAChBtB,EAAAA,aAAa,EAAbA,aADgB;AAEhBO,EAAAA,UAAU,EAAVA,UAFgB;AAGhBX,EAAAA,UAAU,EAAVA,UAHgB;AAIhBe,EAAAA,uBAAuB,EAAvBA;AAJgB,CAAjB","sourcesContent":["const uuidv4 = require('uuid/v4')\n\n/*\n*\tcreateUser\n*\tCreates a user.\n*\t@prop id {string}\n*\t@prop name {string}\n*\t@param {object} \n*\t\tname {string}\n*/\nconst createUser = ({name = \"\", socketId = null} = {})=>(\n\t{\n\t\tid:uuidv4(),\n\t\tname,\n\t\tsocketId\n\t}\n)\n\n/*\n*\tcreateMessage\n*\tCreates a messages object.\n* \t@prop id {string}\n* \t@prop time {Date} the time in 24hr format i.e. 14:22\n* \t@prop message {string} actual string message\n* \t@prop sender {string} sender of the message\n*\t@param {object} \n*\t\tmessage {string}\n*\t\tsender {string}\n*/\nconst createMessage = ({message = \"\", sender = \"\"} = { })=>(\n\t\t{\n\t\t\tid:uuidv4(),\n\t\t\ttime:getTime(new Date(Date.now())),\n\t\t\tmessage,\n\t\t\tsender\t\n\t\t}\n\n\t)\n\n/*\n*\tcreateChat\n*\tCreates a Chat object\n* \t@prop id {string}\n* \t@prop name {string}\n* \t@prop messages {Array.Message}\n* \t@prop users {Array.string}\n*\t@param {object} \n*\t\tmessages {Array.Message}\n*\t\tname {string}\n*\t\tusers {Array.string}\n* \n*/\nconst createChat = ({messages = [], name = \"Community\", users = [], isCommunity = false} = {})=>(\n\t{\n\t\tid:uuidv4(),\n\t\tname: isCommunity ? \"Community\" : createChatNameFromUsers(users),\n\t\tmessages,\n\t\tusers,\n\t\ttypingUsers:[],\n\t\tisCommunity\n\t}\n)\n\n/*\n*\tcreateChatNameFromUsers\n*\t@param users {Array.string}\n*\t@param excludedUser {string} user to exclude from list of names\n*\t@return {string} users names concatenated by a '&' or \"Empty Chat\" if no users\n*/\nconst createChatNameFromUsers = (users, excludedUser = \"\") => {\n\treturn users.filter(u => u !== excludedUser).join(' & ') || \"Empty Users\"\n}\n\n/*\n*\t@param date {Date}\n*\t@return a string represented in 24hr time i.e. '11:30', '19:30'\n*/\nconst getTime = (date)=>{\n\treturn `${date.getHours()}:${(\"0\"+date.getMinutes()).slice(-2)}`\n}\n\nmodule.exports = {\n\tcreateMessage,\n\tcreateChat,\n\tcreateUser,\n\tcreateChatNameFromUsers\n}"]},"metadata":{},"sourceType":"module"}