{"ast":null,"code":"import _classCallCheck from \"/Users/alesio/Documents/CleanSpace/42/chat-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alesio/Documents/CleanSpace/42/chat-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alesio/Documents/CleanSpace/42/chat-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alesio/Documents/CleanSpace/42/chat-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/alesio/Documents/CleanSpace/42/chat-app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/alesio/Documents/CleanSpace/42/chat-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alesio/Documents/CleanSpace/42/chat-app/client/src/components/messages/Messages.js\";\nimport React, { Component } from 'react';\n\nvar Messages =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Messages, _Component);\n\n  function Messages(props) {\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Messages).call(this, props));\n    _this.scrollDown = _this.scrollDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"scrollDown\",\n    value: function scrollDown() {\n      var container = this.refs.container;\n      container.scrollTop = container.scrollHeight;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.scrollDown();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.scrollDown();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          messages = _this$props.messages,\n          user = _this$props.user,\n          typingUsers = _this$props.typingUsers;\n      console.log(messages);\n\n      var outOrInGoingMessage = function outOrInGoingMessage(mes) {\n        if (mes.sender === user.name) {\n          return React.createElement(\"div\", {\n            key: mes.id,\n            className: \"outgoing_msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"sent_msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, mes.message), React.createElement(\"span\", {\n            className: \"time_date\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, mes.time)));\n        } else {\n          return React.createElement(\"div\", {\n            key: mes.id,\n            className: \"incoming_msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"incoming_msg_img\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: \"https://ptetutorials.com/images/user-profile.png\",\n            alt: \"sunil\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"received_msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"received_withd_msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, mes.sender), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, mes.message), React.createElement(\"span\", {\n            className: \"time_date\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, mes.time))));\n        }\n      };\n\n      return React.createElement(\"div\", {\n        ref: \"container\",\n        className: \"mesgs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"msg_history\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, messages.map(function (mes) {\n        console.log(\"message: \", mes);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, outOrInGoingMessage(mes));\n      }), typingUsers.map(function (name) {\n        return React.createElement(\"div\", {\n          key: name,\n          className: \"typing-user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"\".concat(name, \" is typing...\"));\n      })));\n    }\n  }]);\n\n  return Messages;\n}(Component);\n\nexport { Messages as default };","map":{"version":3,"sources":["/Users/alesio/Documents/CleanSpace/42/chat-app/client/src/components/messages/Messages.js"],"names":["React","Component","Messages","props","scrollDown","bind","container","refs","scrollTop","scrollHeight","prevProps","prevState","messages","user","typingUsers","console","log","outOrInGoingMessage","mes","sender","name","id","message","time","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nexport default class Messages extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.scrollDown = this.scrollDown.bind(this)\n    }\n\n    scrollDown() {\n        const {container} = this.refs\n        container.scrollTop = container.scrollHeight\n    }\n\n    componentDidMount() {\n        this.scrollDown()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.scrollDown()\n    }\n\n    render() {\n        const {messages, user, typingUsers} = this.props\n        console.log(messages)\n\n        const outOrInGoingMessage = (mes) => {\n            if (mes.sender === user.name) {\n                return (\n                    <div key={mes.id} \n                        className='outgoing_msg'>\n                        <div className='sent_msg'>\n                            <p>{mes.message}</p>\n                            <span className=\"time_date\">{mes.time}</span>\n                        </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div key={mes.id} \n                        className='incoming_msg'>\n                        <div className='incoming_msg_img'><img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" /></div>\n                        <div className='received_msg'>\n                            <div class=\"received_withd_msg\">\n                                <h1>{mes.sender}</h1>\n                                <p>{mes.message}</p>\n                                <span className=\"time_date\">{mes.time}</span>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        }\n\n        return (\n            <div ref='container'\n                className=\"mesgs\">\n                <div className=\"msg_history\">\n                    {\n                        messages.map((mes) => {\n                            console.log(\"message: \", mes)\n                            return (\n                                <div>\n                                    {outOrInGoingMessage(mes)}\n                                </div>\n                            )\n                        })\n                    }\n                    {\n                        typingUsers.map((name) => {\n                            return (\n                                <div key={name} className=\"typing-user\">\n                                    {`${name} is typing...`}\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}